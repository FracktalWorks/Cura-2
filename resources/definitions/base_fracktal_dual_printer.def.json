{
    "version": 2,
    "name": "Fracktal Works Dual Printer Base Description",
    "inherits": "base_fracktal_printer",
    "metadata":
    {
        "visible": false,
        "author": "Fracktal Works",
        "manufacturer": "Fracktal Works",
        "has_machine_materials": true,
        "has_machine_quality": true,
        "has_materials": true,
        "has_variant_materials": true,
        "has_variants": true,
        "machine_extruder_trains":
        {
            "0": "base_fracktal_dual_extruder_0",
            "1": "base_fracktal_dual_extruder_1"
        },
        "preferred_quality_type": "normal",
        "preferred_variant_name": "Model 0.4 mm",
        "variants_name": "Nozzle"
    },
    "overrides":
    {
        "adhesion_extruder_nr": { "value": "0" },
        "machine_end_gcode": { "default_value": ";End GCode\nM104 T0 S0 ;extruder heater off\nM104 T1 S0 ;extruder heater off\nM140 S0 ;heated bed heater off (if you have it)\nG91 ;relative positioning\nG1 E-1 F300 ;retract the filament a bit before lifting the nozzle, to release some of the pressure\nG1 Z+0.5 E-5 X-20 Y-20 F3000 ;move Z up a bit and retract filament even more\nG28;move X/Y to min endstops, so the head is out of the way\nM84 ;steppers off\nM107\nG90 ;absolute positioning" },
        "machine_extruder_count": { "default_value": 2 },
        "machine_start_gcode": { "default_value": ";Machine Model: {machine_name} \n;Nozzles used: {'T0 ' + str(extruderValue(0, 'machine_nozzle_size'))  + ' T1 ' + str(extruderValue(1, 'machine_nozzle_size'))}\n;Sliced at: {day} {date} {time}\nG21 ;metric values\nM107\nG28\nM420 S1\nG90 ;absolute positioning\nG1 X0 Y0 Z5 F5000 ;move nozzle up 5mm for safe homing\nT0;always start probe with T0\nG29;ABL\nM500\nM82 ;set extruder to absolute mode\nM107 ;start with the fan off\nG1 X0 Y0 Z15.0 F5000 ;move the platform down 15mm\n\n; Extrude purge line\n\nG92 E0 ; reset extruder position\nG0 Z0.2 F500 ; purge\nG0 X15 E2.5 F500 ; purge\nG92 E0 ; reset extruder position\nG0 X25 E2.5 F650 ; purge\nG92 E0 ; reset extruder position\nG0 X35 E2.5 F800 ; purge\nG0 X{35 + 3} Z{0.05} F{8000} ; wipe, move close to the bed\nG0 X{35 + 3 * 2} Z0.2 F{8000} ; wipe, move quickly away from the bed\n\nG92 E0 ; zero the extruded length again\n " },
        "prime_tower_base_curve_magnitude": { "value": "2" },
        "prime_tower_base_height": { "value": "5" },
        "prime_tower_base_size": { "value": "10" },
        "prime_tower_brim_enable": { "value": "True" },
        "prime_tower_enable": { "value": "True" },
        "prime_tower_flow": { "value": 100 },
        "prime_tower_position_x": { "value": "prime_tower_size + 20" },
        "prime_tower_position_y": { "value": "20" },
        "prime_tower_size": { "value": "30" },
        "prime_tower_wipe_enabled": { "value": "False" },
        "raft_airgap": { "value": "0 if extruderValue(support_interface_extruder_nr,'material_is_support_material') else 0.15 if machine_nozzle_size <= 0.25 else 0.25 if machine_nozzle_size <= 0.4 else 0.3 if machine_nozzle_size <= 0.6 else 0.35" },
        "raft_interface_extruder_nr": { "value": "0" },
        "raft_surface_extruder_nr": { "value": "int(anyExtruderWithMaterial('material_is_support_material')) if support_enable and extruderValue(support_extruder_nr,'material_is_support_material') else raft_base_extruder_nr" },
        "speed_support_bottom": { "value": "speed_support_interface * 0.50 if extruderValue(support_interface_extruder_nr,'material_is_support_material') else speed_support_interface" },
        "speed_support_infill": { "value": "speed_print * 0.80 if extruderValue(support_infill_extruder_nr,'material_is_support_material') else speed_print" },
        "speed_support_roof": { "value": "speed_support_interface * 0.75 if extruderValue(support_interface_extruder_nr,'material_is_support_material') else speed_support_interface" },
        "speed_topbottom": { "value": "speed_wall_0 if extruderValue(support_interface_extruder_nr,'material_is_support_material') else speed_wall" },
        "support_extruder_nr_layer_0": { "value": "(0 if support_extruder_nr == 1 else 1) if soluble_support_placement == 'interface_only' and extruderValue(support_extruder_nr,'material_is_support_material') else support_extruder_nr " },
        "support_infill_extruder_nr": { "value": "(0 if support_extruder_nr == 1 else 1) if soluble_support_placement == 'interface_only' and extruderValue(support_extruder_nr,'material_is_support_material') else support_extruder_nr " },
        "support_interface_density": { "value": "100 if extruderValue(support_interface_extruder_nr,'material_is_support_material') else support_infill_rate if gradual_support_infill_steps != 0 else 60" },
        "support_interface_height": { "value": "3 * layer_height if extruderValue(support_interface_extruder_nr,'material_is_support_material') else 2 * layer_height" },
        "support_interface_pattern": { "value": "'concentric' if extruderValue(support_interface_extruder_nr,'material_is_support_material') else 'zigzag'" },
        "support_material_flow": { "value": "material_flow if extruderValue(support_extruder_nr,'material_is_support_material') else 0.9 * material_flow" },
        "support_pattern": { "value": "'zigzag' if extruderValue(support_infill_extruder_nr,'material_is_support_material') and support_structure != 'tree' else 'lines'" },
        "support_z_distance": { "value": "0 if extruderValue(support_interface_extruder_nr,'material_is_support_material') else min(0.2, layer_height) if support_structure != 'tree' else layer_height" },
        "switch_extruder_extra_prime_amount": { "value": "0.5" },
        "switch_extruder_prime_speed": { "value": "25" },
        "switch_extruder_retraction_amount": { "value": "machine_heat_zone_length * 0.75" },
        "switch_extruder_retraction_speeds": { "value": "45" }
    },
    "settings":
    {
        "support":
        {
            "children":
            {
                "soluble_support_placement":
                {
                    "default_value": "everywhere",
                    "description": "Print all support structures with soluable support, or place soluable support only on interface?",
                    "enabled": "extruderValue(support_interface_extruder_nr,'material_is_support_material') and support_enable",
                    "label": "Soluble Support Optimisation",
                    "options":
                    {
                        "everywhere": "Everywhere",
                        "interface_only": "Only on Interface"
                    },
                    "settable_per_extruder": false,
                    "settable_per_mesh": true,
                    "type": "enum"
                }
            }
        }
    }
}